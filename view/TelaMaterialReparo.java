package view;

import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.toedter.calendar.JTextFieldDateEditor;

import model.bean.MaterialReparo;
import model.bean.Reparo;
import model.dao.MaterialDAO;
import model.dao.MaterialReparoDAO;
import model.dao.ReparoDAO;
import model.dao.SmartphoneDAO;

/**
 *
 * @author Bernardojr
 */
public class TelaMaterialReparo extends javax.swing.JFrame {
	
	private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form TelaMaterialReparo
     */
    public TelaMaterialReparo() {
        initComponents();
        readJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodReparo = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        editor = (JTextFieldDateEditor) jDateChooser1.getDateEditor();
        editor.setEditable(false);
        txtCodMaterial = new javax.swing.JTextField();
        txtQuantidade = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaMaterialReparo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Adicionar materiais a um reparo");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Código do Celular");

        jLabel2.setText("Data do Reparo");

        jLabel3.setText("Código do Material");

        jLabel4.setText("Quantidade do Material");

        txtCodReparo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));

        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        tabelaMaterialReparo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código do Celular", "Data do Reparo", "Código do Material", "Quantidade do Material"
            }
        ));
        tabelaMaterialReparo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMaterialReparoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaMaterialReparo);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtCodReparo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtCodMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(118, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodReparo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCodMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnExcluir)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {                                          
    	MaterialReparo mr = new MaterialReparo();
    	MaterialReparoDAO mrDao = new MaterialReparoDAO();
    	String codCelular = txtCodReparo.getText();
		String data = editor.getText();
		String codMaterial = txtCodMaterial.getText();
		String quantidade = txtQuantidade.getText();
		if (!temCamposVazios(codCelular, data, codMaterial, quantidade)){
			if (tamanhoOk(codCelular,codMaterial)){
				
				if(codCelular.matches("^[0-9]*$")){
					mr.setCodCelular(codCelular);;
				}else{
					JOptionPane.showMessageDialog(null,"Código do celular inválido - Deve conter apenas números","Erro",JOptionPane.ERROR_MESSAGE);
					return;}
				if(codMaterial.matches("^[0-9]*$")){
					mr.setCodMat(codMaterial);
				}else{
					JOptionPane.showMessageDialog(null,"Código do material inválido - Deve conter apenas números","Erro",JOptionPane.ERROR_MESSAGE);
					return;}
			}else{
				JOptionPane.showMessageDialog(null,"- Código do celular deve conter 11 dígitos\n- Código do material deve conter 11 dígitos","Erro",JOptionPane.ERROR_MESSAGE);
				return;
			}
				if(quantidade.matches("^[0-9]*$")){
					int numeroCerto = Integer.parseInt(quantidade); 
					mr.setQuantidade(numeroCerto);
				}else{
					JOptionPane.showMessageDialog(null,"Quantidade inválida - Deve conter apenas números","Erro",JOptionPane.ERROR_MESSAGE);
					return;}				
				try {
					java.util.Date parsed = sdf.parse(data);
			        Date sql = new Date(parsed.getTime());
					mr.setDataExecutada(sql);
				} catch (ParseException e) {
					e.printStackTrace();
					JOptionPane.showMessageDialog(null,"Data no formato incorreto","Erro",JOptionPane.ERROR_MESSAGE);
					return;
				}
				MaterialDAO materialDao = new MaterialDAO();
				ReparoDAO reparoDao = new ReparoDAO();
				if (reparoDao.pesquisar(mr.getCodCelular(), mr.getDataExecutada()) != null){
					if(materialDao.pesquisarPorCod(mr.getCodMat()) != null){
					mrDao.criar(mr);	
					txtCodMaterial.setText(null);
					editor.setText(null);
					txtCodReparo.setText(null);
					txtQuantidade.setText(null);
					}else{
						JOptionPane.showMessageDialog(null,"Material nao encontrado","Erro",JOptionPane.ERROR_MESSAGE);
						return;
					}
				}else{
					JOptionPane.showMessageDialog(null,"Reparo nao encontrado","Erro",JOptionPane.ERROR_MESSAGE);
					return;
				}	
			}else{
				JOptionPane.showMessageDialog(null,"Não podem haver campos vazios","Erro",JOptionPane.ERROR_MESSAGE);
				return;
			}
		readJTable();
   	
   		
    }                                         

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	if(tabelaMaterialReparo.getSelectedRow() != -1){
    		MaterialReparo mr = new MaterialReparo();
    		MaterialReparoDAO mrDao = new MaterialReparoDAO();
    		 		   
 		   	mr.setCodCelular(txtCodReparo.getText());
    		mr.setCodMat(txtCodMaterial.getText());
    		int numeroCerto = Integer.parseInt(txtQuantidade.getText()); 
			mr.setQuantidade(numeroCerto);
 		   try {
 			    java.util.Date parsed = sdf.parse(editor.getText());
 		        Date sql = new Date(parsed.getTime());
 				mr.setDataExecutada(sql);
 		   } catch (Exception e) {
 				JOptionPane.showMessageDialog(null,"Data no formato incorreto","Erro",JOptionPane.ERROR_MESSAGE);
 				return;
 		   }
 		   mrDao.excluir(mr);
 		   txtCodMaterial.setText(null);
 		   txtCodReparo.setText(null);
 		   txtQuantidade.setText(null);
 		   editor.setText(null);
 		   readJTable();

 	   }else{
 		   JOptionPane.showMessageDialog(null, "Selecione um material para excluir.");
    	   }
    }                                          

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {                                             
    	MaterialReparo mr = new MaterialReparo();
    	MaterialReparoDAO mrDao = new MaterialReparoDAO();
    	String codCelular = txtCodReparo.getText();
		String data = editor.getText();
		String codMaterial = txtCodMaterial.getText();
		String quantidade = txtQuantidade.getText();
		if (!temCamposVazios(codCelular, data, codMaterial, quantidade)){
			if (tamanhoOk(codCelular,codMaterial)){
				
				if(codCelular.matches("^[0-9]*$")){
					mr.setCodCelular(codCelular);;
				}else{
					JOptionPane.showMessageDialog(null,"Código do celular inválido - Deve conter apenas números","Erro",JOptionPane.ERROR_MESSAGE);
					return;}
				if(codMaterial.matches("^[0-9]*$")){
					mr.setCodMat(codMaterial);
				}else{
					JOptionPane.showMessageDialog(null,"Código do material inválido - Deve conter apenas números","Erro",JOptionPane.ERROR_MESSAGE);
					return;}
			}else{
				JOptionPane.showMessageDialog(null,"- Código do celular deve conter 11 dígitos\n- Código do material deve conter 11 dígitos","Erro",JOptionPane.ERROR_MESSAGE);
				return;
			}
				if(quantidade.matches("^[0-9]*$")){
					int numeroCerto = Integer.parseInt(quantidade); 
					mr.setQuantidade(numeroCerto);
				}else{
					JOptionPane.showMessageDialog(null,"Quantidade inválida - Deve conter apenas números","Erro",JOptionPane.ERROR_MESSAGE);
					return;}				
				try {
					java.util.Date parsed = sdf.parse(data);
			        Date sql = new Date(parsed.getTime());
					mr.setDataExecutada(sql);
				} catch (ParseException e) {
					e.printStackTrace();
					JOptionPane.showMessageDialog(null,"Data no formato incorreto","Erro",JOptionPane.ERROR_MESSAGE);
					return;
				}
				MaterialDAO materialDao = new MaterialDAO();
				ReparoDAO reparoDao = new ReparoDAO();
				if (reparoDao.pesquisar(mr.getCodCelular(), mr.getDataExecutada()) != null){
					if(materialDao.pesquisarPorCod(mr.getCodMat()) != null){
					mrDao.atualizar(mr);	
					txtCodMaterial.setText(null);
					editor.setText(null);
					txtCodReparo.setText(null);
					txtQuantidade.setText(null);
					}else{
						JOptionPane.showMessageDialog(null,"Material nao encontrado","Erro",JOptionPane.ERROR_MESSAGE);
						return;
					}
				}else{
					JOptionPane.showMessageDialog(null,"Reparo nao encontrado","Erro",JOptionPane.ERROR_MESSAGE);
					return;
				}	
			}else{
				JOptionPane.showMessageDialog(null,"Não podem haver campos vazios","Erro",JOptionPane.ERROR_MESSAGE);
				return;
			}
		readJTable();
    }                                            

    private void tabelaMaterialReparoMouseClicked(java.awt.event.MouseEvent evt) {                                                  
    	if(tabelaMaterialReparo.getSelectedRow() != -1){
       		txtCodReparo.setText(tabelaMaterialReparo.getValueAt(tabelaMaterialReparo.getSelectedRow(), 0).toString());
       		editor.setText(tabelaMaterialReparo.getValueAt(tabelaMaterialReparo.getSelectedRow(), 1).toString());
       		txtCodMaterial.setText(tabelaMaterialReparo.getValueAt(tabelaMaterialReparo.getSelectedRow(), 2).toString());
       		txtQuantidade.setText(tabelaMaterialReparo.getValueAt(tabelaMaterialReparo.getSelectedRow(), 3).toString());
       	}
    }                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaMaterialReparo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaMaterialReparo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaMaterialReparo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaMaterialReparo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaMaterialReparo().setVisible(true);
            }
        });
    }
    
    public void readJTable(){
       	DefaultTableModel modelo = (DefaultTableModel) tabelaMaterialReparo.getModel();
       	modelo.setRowCount(0);
       	MaterialReparoDAO materialReparoDAO = new MaterialReparoDAO();
       	      	
       	
       	try {
    		for(MaterialReparo mr: materialReparoDAO.listar()){
    			modelo.addRow(new Object[]{mr.getCodCelular(),
    					sdf.format(mr.getDataExecutada()),(mr.getCodMat()),
    					mr.getCodMat(), mr.getQuantidade()
    							});
    		}
    	} catch (Exception e) {
    		// TODO Auto-generated catch block
    		e.printStackTrace();
    	}
    }
    
    private boolean temCamposVazios(String codigoR, String data, String codigoM, String qtd){
 	   if (codigoR.length() == 0 || data.length() == 0 || codigoM.length() == 0 || qtd.length() == 0){
 		   return true;
 	   }
 	   return false;
    }
    
    private boolean tamanhoOk(String codigoR, String codigoM){		     
 	   if (codigoR.length() == 11 && codigoM.length() == 11){
 		   	return true;	
 	   }else{
 			return false;
 	   }	
    }
    
    public static Date formataData(String data) throws Exception { 
 		if (data == null || data.equals(""))
 			return null;
        Date date = null;
        try {
            DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            date = (java.sql.Date)formatter.parse(data);
        } catch (ParseException e) {            
            throw e;
        }
        return date;
 	}

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private JTextFieldDateEditor editor; 
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCodReparo;
    private javax.swing.JTextField txtCodMaterial;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTable tabelaMaterialReparo;
    // End of variables declaration                   
}
